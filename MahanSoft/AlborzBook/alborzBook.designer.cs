#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlborzBook
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AlborzDb")]
	public partial class alborzBookDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblBook(tblBook instance);
    partial void UpdatetblBook(tblBook instance);
    partial void DeletetblBook(tblBook instance);
    partial void InserttblCategoryBook(tblCategoryBook instance);
    partial void UpdatetblCategoryBook(tblCategoryBook instance);
    partial void DeletetblCategoryBook(tblCategoryBook instance);
    partial void InserttblPublisher(tblPublisher instance);
    partial void UpdatetblPublisher(tblPublisher instance);
    partial void DeletetblPublisher(tblPublisher instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblCustomer(tblCustomer instance);
    partial void UpdatetblCustomer(tblCustomer instance);
    partial void DeletetblCustomer(tblCustomer instance);
    #endregion
		
		public alborzBookDataContext() : 
				base(global::AlborzBook.Properties.Settings.Default.AlborzDbConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public alborzBookDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public alborzBookDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public alborzBookDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public alborzBookDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblBook> tblBooks
		{
			get
			{
				return this.GetTable<tblBook>();
			}
		}
		
		public System.Data.Linq.Table<tblCategoryBook> tblCategoryBooks
		{
			get
			{
				return this.GetTable<tblCategoryBook>();
			}
		}
		
		public System.Data.Linq.Table<tblPublisher> tblPublishers
		{
			get
			{
				return this.GetTable<tblPublisher>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblCustomer> tblCustomers
		{
			get
			{
				return this.GetTable<tblCustomer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBook")]
	public partial class tblBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bookId;
		
		private int _categoryId;
		
		private int _publishersId;
		
		private string _bookName;
		
		private long _price;
		
		private int _number;
		
		private EntityRef<tblCategoryBook> _tblCategoryBook;
		
		private EntityRef<tblPublisher> _tblPublisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookIdChanging(int value);
    partial void OnbookIdChanged();
    partial void OncategoryIdChanging(int value);
    partial void OncategoryIdChanged();
    partial void OnpublishersIdChanging(int value);
    partial void OnpublishersIdChanged();
    partial void OnbookNameChanging(string value);
    partial void OnbookNameChanged();
    partial void OnpriceChanging(long value);
    partial void OnpriceChanged();
    partial void OnnumberChanging(int value);
    partial void OnnumberChanged();
    #endregion
		
		public tblBook()
		{
			this._tblCategoryBook = default(EntityRef<tblCategoryBook>);
			this._tblPublisher = default(EntityRef<tblPublisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bookId
		{
			get
			{
				return this._bookId;
			}
			set
			{
				if ((this._bookId != value))
				{
					this.OnbookIdChanging(value);
					this.SendPropertyChanging();
					this._bookId = value;
					this.SendPropertyChanged("bookId");
					this.OnbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryId", DbType="Int NOT NULL")]
		public int categoryId
		{
			get
			{
				return this._categoryId;
			}
			set
			{
				if ((this._categoryId != value))
				{
					if (this._tblCategoryBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryIdChanging(value);
					this.SendPropertyChanging();
					this._categoryId = value;
					this.SendPropertyChanged("categoryId");
					this.OncategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishersId", DbType="Int NOT NULL")]
		public int publishersId
		{
			get
			{
				return this._publishersId;
			}
			set
			{
				if ((this._publishersId != value))
				{
					if (this._tblPublisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpublishersIdChanging(value);
					this.SendPropertyChanging();
					this._publishersId = value;
					this.SendPropertyChanged("publishersId");
					this.OnpublishersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string bookName
		{
			get
			{
				return this._bookName;
			}
			set
			{
				if ((this._bookName != value))
				{
					this.OnbookNameChanging(value);
					this.SendPropertyChanging();
					this._bookName = value;
					this.SendPropertyChanged("bookName");
					this.OnbookNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="BigInt NOT NULL")]
		public long price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int NOT NULL")]
		public int number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategoryBook_tblBook", Storage="_tblCategoryBook", ThisKey="categoryId", OtherKey="categoryId", IsForeignKey=true)]
		public tblCategoryBook tblCategoryBook
		{
			get
			{
				return this._tblCategoryBook.Entity;
			}
			set
			{
				tblCategoryBook previousValue = this._tblCategoryBook.Entity;
				if (((previousValue != value) 
							|| (this._tblCategoryBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCategoryBook.Entity = null;
						previousValue.tblBooks.Remove(this);
					}
					this._tblCategoryBook.Entity = value;
					if ((value != null))
					{
						value.tblBooks.Add(this);
						this._categoryId = value.categoryId;
					}
					else
					{
						this._categoryId = default(int);
					}
					this.SendPropertyChanged("tblCategoryBook");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPublisher_tblBook", Storage="_tblPublisher", ThisKey="publishersId", OtherKey="publishersId", IsForeignKey=true)]
		public tblPublisher tblPublisher
		{
			get
			{
				return this._tblPublisher.Entity;
			}
			set
			{
				tblPublisher previousValue = this._tblPublisher.Entity;
				if (((previousValue != value) 
							|| (this._tblPublisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPublisher.Entity = null;
						previousValue.tblBooks.Remove(this);
					}
					this._tblPublisher.Entity = value;
					if ((value != null))
					{
						value.tblBooks.Add(this);
						this._publishersId = value.publishersId;
					}
					else
					{
						this._publishersId = default(int);
					}
					this.SendPropertyChanged("tblPublisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCategoryBook")]
	public partial class tblCategoryBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _categoryId;
		
		private string _categoryName;
		
		private EntitySet<tblBook> _tblBooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryIdChanging(int value);
    partial void OncategoryIdChanged();
    partial void OncategoryNameChanging(string value);
    partial void OncategoryNameChanged();
    #endregion
		
		public tblCategoryBook()
		{
			this._tblBooks = new EntitySet<tblBook>(new Action<tblBook>(this.attach_tblBooks), new Action<tblBook>(this.detach_tblBooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int categoryId
		{
			get
			{
				return this._categoryId;
			}
			set
			{
				if ((this._categoryId != value))
				{
					this.OncategoryIdChanging(value);
					this.SendPropertyChanging();
					this._categoryId = value;
					this.SendPropertyChanged("categoryId");
					this.OncategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string categoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				if ((this._categoryName != value))
				{
					this.OncategoryNameChanging(value);
					this.SendPropertyChanging();
					this._categoryName = value;
					this.SendPropertyChanged("categoryName");
					this.OncategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategoryBook_tblBook", Storage="_tblBooks", ThisKey="categoryId", OtherKey="categoryId")]
		public EntitySet<tblBook> tblBooks
		{
			get
			{
				return this._tblBooks;
			}
			set
			{
				this._tblBooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBooks(tblBook entity)
		{
			this.SendPropertyChanging();
			entity.tblCategoryBook = this;
		}
		
		private void detach_tblBooks(tblBook entity)
		{
			this.SendPropertyChanging();
			entity.tblCategoryBook = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPublisher")]
	public partial class tblPublisher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _publishersId;
		
		private string _publishersName;
		
		private EntitySet<tblBook> _tblBooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpublishersIdChanging(int value);
    partial void OnpublishersIdChanged();
    partial void OnpublishersNameChanging(string value);
    partial void OnpublishersNameChanged();
    #endregion
		
		public tblPublisher()
		{
			this._tblBooks = new EntitySet<tblBook>(new Action<tblBook>(this.attach_tblBooks), new Action<tblBook>(this.detach_tblBooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishersId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int publishersId
		{
			get
			{
				return this._publishersId;
			}
			set
			{
				if ((this._publishersId != value))
				{
					this.OnpublishersIdChanging(value);
					this.SendPropertyChanging();
					this._publishersId = value;
					this.SendPropertyChanged("publishersId");
					this.OnpublishersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishersName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string publishersName
		{
			get
			{
				return this._publishersName;
			}
			set
			{
				if ((this._publishersName != value))
				{
					this.OnpublishersNameChanging(value);
					this.SendPropertyChanging();
					this._publishersName = value;
					this.SendPropertyChanged("publishersName");
					this.OnpublishersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPublisher_tblBook", Storage="_tblBooks", ThisKey="publishersId", OtherKey="publishersId")]
		public EntitySet<tblBook> tblBooks
		{
			get
			{
				return this._tblBooks;
			}
			set
			{
				this._tblBooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBooks(tblBook entity)
		{
			this.SendPropertyChanging();
			entity.tblPublisher = this;
		}
		
		private void detach_tblBooks(tblBook entity)
		{
			this.SendPropertyChanging();
			entity.tblPublisher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userName;
		
		private string _password;
		
		private string _roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnrolesChanging(string value);
    partial void OnrolesChanged();
    #endregion
		
		public tblUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roles", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string roles
		{
			get
			{
				return this._roles;
			}
			set
			{
				if ((this._roles != value))
				{
					this.OnrolesChanging(value);
					this.SendPropertyChanging();
					this._roles = value;
					this.SendPropertyChanged("roles");
					this.OnrolesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCustomer")]
	public partial class tblCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customersId;
		
		private string _customersName;
		
		private string _customersPhoneNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustomersIdChanging(int value);
    partial void OncustomersIdChanged();
    partial void OncustomersNameChanging(string value);
    partial void OncustomersNameChanged();
    partial void OncustomersPhoneNumberChanging(string value);
    partial void OncustomersPhoneNumberChanged();
    #endregion
		
		public tblCustomer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customersId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customersId
		{
			get
			{
				return this._customersId;
			}
			set
			{
				if ((this._customersId != value))
				{
					this.OncustomersIdChanging(value);
					this.SendPropertyChanging();
					this._customersId = value;
					this.SendPropertyChanged("customersId");
					this.OncustomersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customersName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string customersName
		{
			get
			{
				return this._customersName;
			}
			set
			{
				if ((this._customersName != value))
				{
					this.OncustomersNameChanging(value);
					this.SendPropertyChanging();
					this._customersName = value;
					this.SendPropertyChanged("customersName");
					this.OncustomersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customersPhoneNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string customersPhoneNumber
		{
			get
			{
				return this._customersPhoneNumber;
			}
			set
			{
				if ((this._customersPhoneNumber != value))
				{
					this.OncustomersPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._customersPhoneNumber = value;
					this.SendPropertyChanged("customersPhoneNumber");
					this.OncustomersPhoneNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
